var tipuesearch = {"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/Liaots/cd2024/ 網站: https://liaots.github.io/cd2024/ 簡報: https://liaots.github.io/cd2024/reveal/ 網誌: https://liaots.github.io/cd2024/blog/","tags":"misc","url":"./pages/about/"},{"title":"w14課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統14 Python 解譯系統 利用 gen_py3123_portable.py 在上列舊版的 Python 可攜環境執行, 可在 C:\\tmp 建立最基本的可攜 Python3123 程式目錄. 若將 Python3123 放入先前舊版的可攜 Python371 data 目錄中, 且配合建立 start_ipv6_py3123.bat, 則可以將 Python 3.7.1 版的可攜 Python 升級為 Python 3.12.3 版. 但是利用上述流程所建立的 Python 3.12.3 版可攜程式並沒有 pip, 必須啟動 start_ipv6_py3123.bat 後, 在命令列執行 python get-pip.py 才能在可攜系統安裝 pip, 安裝 pip 後, 可以在命令列中以 pip list 查驗目前所安裝的 Python 模組. 前述之所以要在啟動可攜之後的命令列執行 get-pip.py 的原因是, pip.exe 會將執行時的 Python 解譯器位置直接寫入二位元檔案中, 若使用 Pythonw.exe, 所建立的 pip.exe 就只能在 Windows 圖形介面中使用, 因此, 為了讓可攜系統的 pip.exe 能夠在命令列中使用, 必須在執行 get-pip.py 時採用 Python.exe. 其次, 用於 Siemens NXOpen Python 開發用的 版本, 必須配合各 NX 版本編譯其 NXOpen 動態連結程式庫所使用的 Python 版本, 以 NX1872 而言, 必須對應使用 Python 3.7.1 相容版本. 而 NX1980 則必須使用 Python 3.8.8 相容版本, NX2008 與 NX2027 則配合使用 Python 3.8.12 相容版本, NX2206 與 NX2312 必須使用 Python 3.10.4 與 Python 3.10.12 相容版本.","tags":"w14","url":"./41123142_w14.html"},{"title":"w13課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統13 我們經常提起 Windows 64 位元操作系統環境下的所謂可攜程式系統, 其時主要的考量是希望所開發的工具不僅能在 Microsoft Windows 環境中使用, 同時也能在 Linux (這裡指 Ubuntu 操作系統) 以及 macOS (BSD 系統) 中執行. 無論是 Portable_2024.7z 或者最新釋出專用於 NX1872(2019.06 釋出, 目前已經不再更新) 用來開發 NXOpen Python 程式的可攜環境: Python_for_NX1872.7z, 都是在這樣的架構下產生. 由於數位裝置與網路的無所不在, 產品設計工程師必須能在任何地方進行輔助設計與內容管理, 更重要的是過程中所產生的數位資料必須儘可能在產品生命週期間放置在保全度較高的設備中, 於是對於面對手機、平板與電腦前面的工程師, 必須能將數位資料送到近端環境與雲端環境中的資料中心. 另外一個重點是, 隨著 AI 工具的普及, 雲端產品協同設計將成為主流, 各項系統設計與應用將逐一結合近端與雲端裝置, 成為無所不在的設計整合環境, 因此工程師除了應用既有的輔助設計套件外, 還要學習如何打造自己團隊使用的協同產品設計工具, 以下為兩個簡單的範例: http://229.cycu.org:9447/?semester=1121&classid=設二甲 可以從教務主機擷取各學年的班級課表, 程式碼位於 nfulist_v2_2024.py, 此套件可以用於機械產品開發過程, 透過雲端程式即時擷取在設計運算或參數選擇時, 動態從其他零組件協同供應商或設計便覽伺服器中擷取所需的資料. http://229.cycu.org:88 則是一個線上多人猜數字遊戲, 採用 Python 與 Javascript 結合 WebSocket 編寫, 使用者輸入姓名後, 可以同步參與多人猜數字遊戲, 每一階段各用戶只能最多猜 10 次, 每一輪優勝者可得一分. 程式碼位於 guess_game_server.py 與 guess_game.html.","tags":"w13","url":"./41123142_w13.html"},{"title":"w12課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統12 參考程式: nxopen_combine_block_and_drill_hole.py 利用 NXOpen Python 建立鋼球平衡台中的平台零件 利用 NXOpen Python 進行平台零件組立 (鋼球平衡台 NX 零件取自 https://github.com/40923157/cd2024/tree/main/downloads) 實習任務一: 請參考上列教學影片與參考程式, 將鋼球平衡台零組件的繪製與組立任務分配給組員, 由組員分別繳交至少一份零件繪製的 NXOpen Python 程式, 以及至少一份零件組立的 NXOpen Python 程式, 完成後, 請在個人的課程網誌紀錄 w12 實習任務一的執行心得. 將各分組倉儲設為評分倉儲的子模組 實習任務二: 將分組倉儲設為評分網站子模組 2a 評分倉儲: https://github.com/mdecd2024/2astud-2asite 2b 評分倉儲: https://github.com/mdecd2024/2bstud-2bsite 以 2a 第一組分組倉儲 https://github.com/mdecd2024/2a-midag1 為例, 設為 2astud-2asite 倉儲名稱為 g1 的子模組指令為: git submodule add https://github.com/mdecd2024/2a-midag1 g1 其餘各班與各組的子模組則依序命名為 g1, g2, g3 ......, 依此類推. 各班評分倉儲的各組子模組設定完成後, 可以設法依照先前各組整合分組 LaTeX 報告與分組網誌的方法, 整合全班各組項下各學員的網誌文章 (.html 格式) 與執行專案報告 (.pdf 格式) 請各分組先在各組的分組網誌與分組報告中說明, 該如何將分組整合流程擴大到全班協同?","tags":"w12","url":"./41123142_w12.html"},{"title":"w11課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統11 鋼球平衡台自動控制系統模擬 請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中. 建立協同 Web-based 機電系統模擬設計必須涉及的議題包括： 1如何使用 NX 執行零組件繪圖 - NX 參考資料 2如何使用1872版安裝及可攜版 - NX1872 3如何啓動及連網認證 - NX1872 4了解啓動後用戶設定的存檔位置 - NX1872 5認識 NX 的目錄模組架構 - NX 6認識 NXOpen Python 程式延伸架構 - NXOpen 7了解 Journal 程式設定、建立及執行（internal 及 run_journal.exe 用法） 8了解如何針對設計繪圖尺寸單位選擇 - 建立新零件檔案時由 Units 選單選則 mm 或 inches 9學習草圖建構、參數選用及長出特徵使用 - NX 參考資料 10學習如何完成零件組立 - NX 參考資料 11了解零組件轉檔相關知識（如選用零組件座標系統、STL格式及尺寸比例） 12了解如何轉入 CoppeliaSim，如何選擇合用的尺寸及比例 13了解如何進行場景組件的座標系統轉換 14了解開放式機構及封閉式機構的場景如何設置 15認識場景存檔的三種格式（binary與XML間的轉換及應用)及應用時機 16瞭解如何運用 Web-based 場景模擬串流 17學習如何建立場景控制程式（internal Lua、Python、Remoteapi Python、IPv4 Websocket&ZMQ vs IPv6 Websocket&ZMQ) 18了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告","tags":"w11","url":"./41123142_w11.html"},{"title":"w10課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統10 協同產品設計實習第十週實習操作, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. W10 起 Replit 已經可以用來維護分組倉儲 建立各班學員的倉儲、網站與分組連結 這是 W10 實習的任務一: 已知: 2b 初步資料放入數列 可以將 2b.txt 即時資料取出, 並且將每一行隔開後, 逐一放入數列. 後續處理: 只要透過 for 重複迴圈, 就可以從上列資料中每位學員的基本資料 (學號、Github 帳號與組別) 中直接在網頁建立所需的 html. 學員倉儲連結 template: https://github.com/學員帳號/cd2024 學員網站連結 template: https://學員帳號.github.io/cd2024 2b 分組倉儲連結 template: https://github.com/mdecd2024/2b-midbg組別 2a 分組倉儲連結 template: https://github.com/mdecd2024/2a-midag組別","tags":"w10","url":"./41123142_w10.html"},{"title":"w9課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統9 期中成績自評","tags":"w9","url":"./41123142_w9.html"},{"title":"w8課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統8 協同產品設計實習課程使用網際內容管理系統, 採 Github Classroom 建立分組倉儲, 並由學員自行利用 cmsimde_site 作為 Github 倉儲的引擎目錄, 利用 Python 執行網頁編輯. 之後再轉檔為靜態網頁, 以便利用 Github Pages 所提供的 WWW 伺服器呈現協同產品設計過程的相關多媒體內容. 除了章節式的網站外, cmsimde_site 還額外利用 Pelican 管理使用者所建立的網誌, 以及利用 Reveal 管理使用者所建立的網際簡報. 在使用者每週的內容管理過程, 由於必須採用 Python 執行網頁編輯, cd2024 課程採用了四種不同的方法進行, 其中包括 Replit、Codespaces、Gitpod 以及 localhost. 由於前三者屬於雲端作業, 各有不同的使用規定與免費使用權限, 對於多人協同的產品設計團隊而言, 可以根據各自的喜好與環境選擇合用的網頁編輯工具, 且在多方了解下也可透過實際使用發展中的雲端 IDE 環境, 一窺未來可能的 AI 導引前景. 從協同設計的架構上, 個人與分組的倉儲中, 總共設計了以下幾種內容的協同模式: 1.分組網站內容的協同 - 其中包括章節式的網站內容與網誌內容, 可以透過 Python 程式方法整合各學員子模組中的 config/content.htm 以及 markdown/*.md 檔案至分組網站中 2.分組報告內容的協同 - 採用的是 Github Actions 與近端 MikTeX 中的 xelatex 將 .tex 轉為 pdf 的整合過程 3.分組產品設計的 PLM 協同 - 採用的是 Odoo PLM 模組, 讓各分組可以將網站內容、報告內容視為產品, 從協同架構的訂定作為起點, 完成資料展示作為終點, 逐一將過程的協調、派任與執行方法納入 PLM 系統管理 4.分組零組件設計的協同 - 分別採用 Solvespace 作為鋼球平衡台範例, 讓學員使用 Siemens NX 1872 進行協同零組件繪圖設計, 並將各零件的 .prt 檔案納入各學員的倉儲進行組立, 以便找出最佳的設計分工以及零組件轉檔流程 5.分組模擬場景設計的協同 - 當各分組順利完成鋼球平衡台的零組件轉檔後, 一旦進入 CoppeliaSim 場景後, 必須逐一配置感測器 (Sensors)、致動器 (Actuators) 以及 ZMQ RemoteAPI Python程式, 主要探討如何將此一場景模擬過程在 CoppeliaSim XML 檔案格式與 Siemens NXOpen Python 零件程式檔案間, 找到合用或最佳的協同產品設計模式. 6.分組專案簡報設計的協同 - 在上述各產品設計階段所累積的各種資料, 該如何有效整合到專案完成後必須進行的網際簡報中.","tags":"w8","url":"./41123142_w8.html"},{"title":"w6課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統6 ODOO PLM 論文中英並列任務 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 教學影片分組整理並自評 請各組自行搜尋前面已經發布的教學影片, 分別 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點","tags":"w6","url":"./41123142_w6.html"},{"title":"w5課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統5 ODOO PLM 論文中英並列任務 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2a-midagx_report.pdf 的製作. 教學影片分組整理並自評 請各組自行搜尋前面已經發布的教學影片, 分別 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點","tags":"w5","url":"./41123142_w5.html"},{"title":"w4課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統4 協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用. w4 2a 分組任務 請各組自行搜尋前面已經發布的教學影片, 分別 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點 個人的倉儲名稱為 cd2024, 而期中的分組倉儲位於 mdecd2024 帳號下, 以2a 開頭, 加上 \"-\" 之後再補上 midag + 組別, 且各組員的 cd2024 個人倉儲必須設為各分組倉儲的子模組, 目的在各組員可以自行管理並維護自己的課程倉儲, 並決定要引入分組倉儲的內容版次. 各組員與分組倉儲的資料, 包括文字資料 (含 LaTeX 報告章節資料)、零組件檔案、零件工程圖或組立圖檔 (含 BOM 與爆炸圖), 以及目前正在整理的教學影片, 或者是各學員將操作流程錄製成的影片或 Wink 資料.","tags":"w4","url":"./41123142_w4.html"},{"title":"w3課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統3 2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作. cd2024 期中分組倉儲與網站 上列連結使用 [Brython] 程式語法, 可直接在網頁中列出特定連結內容, 所採用的程式碼如下:","tags":"w3","url":"./41123142_w3.html"},{"title":"w2課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統2 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 範例分組倉儲: https://github.com/mdecd2024/test-ag1 期中分組作業名稱甲班為 2a, 其中甲班第一組組長必須建立名稱為 midag1 的 Team, 讓第一組的組員員加入. 其餘各組的期中報告 Team 名稱則分別為 midag2, midag3 .... 根據上述規劃, 甲班第一分組的期中協同倉儲將位於: https://github.com/mdecd2024/2a-midag1, 第一組的期中報告網站將位於: https://mdecd2024.github.io/2a-midag1. 說明甲班第一組組長如何建立 midag1 Team, 並利用 Codespaces 維護 2a-midag1 分組倉儲 說明如何利用 Replit 管理從 Classroom 取得的分組倉儲 待各分組的期中報告 Team 與倉儲全部建立就緒後, 則甲班學員後續可配合期末作業名稱 2a2, 由甲班各組組長建立 Team finalag1, finalag2 ....等. 利用 Codespaces 維護倉儲與網站 說明如何利用 Github Codespaces 維護網站內容 由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. 在近端執行動態網站 說明如何利用近端可攜系統維護分組網站","tags":"w2","url":"./41123142_w2.html"},{"title":"w1課程網誌","text":"網際內容管理與協同產品設計實習課程網誌. 內容管理系統1 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. ## 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./41123142_w1.html"}]};